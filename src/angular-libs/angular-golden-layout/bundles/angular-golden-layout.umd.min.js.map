{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-golden-layout/lib/tokens/golden-layout-container.token.ts","ng://angular-golden-layout/lib/tokens/golden-layout-item-component-factory.token.ts","ng://angular-golden-layout/lib/services/layout-manager.service.ts","ng://angular-golden-layout/lib/utils/JsUtils.ts","ng://angular-golden-layout/lib/popup-window-manager.ts","ng://angular-golden-layout/lib/tokens/golden-layout-item-container.token.ts","ng://angular-golden-layout/lib/tokens/golden-layout-configuration.token.ts","ng://angular-golden-layout/lib/tokens/golden-layout-item-state.token.ts","ng://angular-golden-layout/lib/components/golden-layout/golden-layout.component.ts","ng://angular-golden-layout/lib/components/golden-layout-popup/golden-layout-popup.component.ts","ng://angular-golden-layout/lib/golden-layout-item.ts","ng://angular-golden-layout/lib/components/golden-layout-item-container/golden-layout-item-container.component.ts","ng://angular-golden-layout/lib/layout.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","GoldenLayoutContainer","InjectionToken","GoldenLayoutItemComponentResolver","LayoutManagerService","defineProperty","_layout","setLayout","layout","addComponent","data","layoutItemName","state","parent","addComponentAsColumn","loadState","fireStateChanged","clear","Injectable","JsUtils","generateGUID","s4","Math","floor","random","toString","substring","PopupWindowConfigKey","PopupWindowManager","window","popupConfig","_this","id","_closedByUser","_runChangeDetection$","Subject","componentConfig","layoutSettings","popin","compConfig","popinHandler","popupStateChangedHandler","runChangeDetectionInRootWindow","runChangeDetectionHandler","needRunChangeDetection","asObservable","onLayoutCreated","_popupLayout","$","one","popupClosedHandler","close","openWindow","url","popupWindowNative","open","serializeWindowOptions","width","height","menubar","toolbar","location","personalbar","resizable","scrollbars","status","windowOptions","windowOptionsString","key","join","runChangeDetection","saveState","content","GoldenLayoutItemContainerToken","GoldenLayoutComponentConfiguration","GoldenLayoutItemState","DefaultLabels","additionalTabs","of","maximise","minimise","popout","loading","failedToLoadComponent","Class","GoldenLayoutComponent","viewContainer","_layoutManager","componentFactoryResolver","ngZone","_changeDetectorRef","_appRef","injector","_configuration","popupsWindows","$onAddComponent","$layoutEmpty","BehaviorSubject","$stateChanged","_destroy$","_labels","_resize$","_suppressChangeDetection","_isDestroyed","_setLabels","labels","getValue","getSingleComponentLayoutConfig","version","stateVersion","ngOnInit","pipe","auditTime","takeUntil","subscribe","goldenLayout","updateSize","ngDoCheck","forEach","w","_registerComponents","_b","tslib_1.__values","components","_c","component","registerComponent","componentName","createComponentInitCallback","_createLayout","rej","setTimeout","_ignoredItem","notOpenedPopupsComponents","openPopups","itemConfig","_openPopup","isLayoutEmpty","type","GoldenLayout","el","nativeElement","on","isInitialised","gl","glc","item","_handleItemCreated","container","destroy","stack","_handleStackCreated","eventHub","isColumn","isRow","contentItems","root","filter","detectChanges","isMaximised","toggleMaximise","init","onResize","event","isStack","settings","showAddBtn","addComponentBtn_1","_getLabel","attr","getAddComponentBtnIcon","append","header","tabsContainer","run","click","trigger","console","showCloseIcon","_addCloseBtn","controlsContainer","find","hide","showMaximiseIcon","_addMaximizeBtn","showPopoutIcon","_addPopoutBtn","showPopinIcon","_addPopinBtn","componentResolver","that","factory","resolveComponentFactory","get","_createComponentInjector","componentState","componentRef","createComponent","undefined","getElement","_bindEventHooks","ReflectiveInjector","resolveAndCreate","provide","useValue","onShow","onHide","tab","_handleTabCreated","_config","isClosable","element","addClass","onTabCreated","popoutBtn","off","getPopoutIcon","_handlePopupClick","popinBtn","getPopinIcon","fromEvent","first","_saveItemState","config","after","_getMaximiseIcon","getMaximiseIcon","_getMinimiseIcon","getMinimiseIcon","updateBtn","icon","maximiseBtn","empty","btn","getCloseIcon","_addCloseTabBtn","getCloseTabIcon","closeElement","showCloseTabIcon","_addMobileTabDraggingSupport","canOpenPopupWindow","activeContentItem","getActiveContentItem","removeChild","tabDrag","css","position","top","left","bottom","right","z-index","reorderEnabled","_overrideTabOnDragStart","origin","_onDragStart","dragListener","_dragListener","dragElement","x","appendTo","remove","popupWindow","popupWindowManager","popupWindowConfig","_componentConfig","addItemAsColumn","closedByUser","tick","popupWindowUrl","openPopupHook","openPopupFailureHandler","setState","getState","getAllComponents","toConfig","map","closePopups","_normalizeLayoutState","saveItemState","itemId","items","getItemsById","getItemsByType","normalizedState","tabControlOffset","selectionEnabled","responsiveMode","dimensions","_migrateState","warn","_a","e_6","layoutRoot","addChild","row","createContentItem","Date","getTime","temp","replaceChild","_createComponentContentItemConfig","addItem","stackContentItem","column","getLabel","firstValue","label$","ngOnDestroy","complete","unloadNotification","$event","Component","args","selector","template","providers","ViewContainerRef","ComponentFactoryResolver","NgZone","ChangeDetectorRef","ApplicationRef","Injector","Inject","ViewChild","static","HostListener","__Holder","configuration","SkipSelf","configurationFactory","holder","popupConfiguration","GoldenLayoutPopupComponent","_destroy","_popupConfiguration","ngAfterViewInit","useFactory","deps","GoldenLayoutItem","_container","_goldenLayoutComponent","tabElement","_tabElement","onContainerMaximized","isOwnContainer","onContainerMinimized","setTitle","title$","_titleSubscription","unsubscribe","title","LoadComponentState","Loading","Success","Failed","GoldenLayoutItemContainerComponent","_super","_componentResolver","_componentFactoryResolver","_injector","__","constructor","create","tslib_1.__extends","loadingLabel","loadComponentState","ref","componentContainer","changeDetectorRef","_layoutItem","failedToLoadLabel","componentFactory","read","Éµ0","GoldenLayoutModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {InjectionToken} from \"@angular/core\";\n\nexport const GoldenLayoutContainer = new InjectionToken('GoldenLayoutContainer');\n","import {InjectionToken} from \"@angular/core\";\n\nexport const GoldenLayoutItemComponentResolver = new InjectionToken('GoldenLayoutItemComponentResolver');\n","import {Injectable, Type} from \"@angular/core\";\nimport {IGoldenLayoutComponentState} from \"../models/golden-layout-component-state\";\nimport {GoldenLayoutComponent} from \"../components/golden-layout/golden-layout.component\";\n\nexport interface AddComponentData {\n    layoutItemName: string;\n    state: any;\n    parent?: any;\n}\n\n@Injectable()\nexport class LayoutManagerService {\n    private _layout: GoldenLayoutComponent;\n\n    get layout(): GoldenLayoutComponent {\n        return this._layout;\n    }\n\n    setLayout(layout: GoldenLayoutComponent) {\n        this._layout = layout;\n    }\n\n    addComponent(data: AddComponentData) {\n        if (this.layout) {\n            this.layout.addComponent(data.layoutItemName, data.state, data.parent);\n        }\n    }\n\n    addComponentAsColumn(data: AddComponentData) {\n        if (this.layout) {\n            this.layout.addComponentAsColumn(data.layoutItemName, data.state);\n        }\n    }\n\n    loadState(state: IGoldenLayoutComponentState, fireStateChanged: boolean = false) {\n        if (this.layout) {\n            this.layout.loadState(state, fireStateChanged);\n        }\n    }\n\n    clear() {\n        if (this.layout) {\n            this.layout.clear();\n        }\n    }\n}\n","export class JsUtils {\n  static generateGUID(): string {\n    const s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    };\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n}\n","import {Observable, Subject} from 'rxjs';\nimport ItemConfig = GoldenLayoutNamespace.ItemConfig;\nimport {IGoldenLayoutComponentSettings} from './models/configuration';\nimport ComponentConfig = GoldenLayoutNamespace.ComponentConfig;\nimport {GoldenLayoutComponent} from './components/golden-layout/golden-layout.component';\nimport {JsUtils} from './utils/JsUtils';\n\nexport type PopinHandler = (componentConfig: ComponentConfig) => void;\nexport type PopupStateChangedHandler = () => void;\n\nexport interface IPopupWindowManagerConfig {\n  componentConfig: ItemConfig;\n  layoutSettings: IGoldenLayoutComponentSettings;\n  popinHandler: PopinHandler;\n  popupStateChangedHandler: PopupStateChangedHandler;\n  popupClosedHandler: (closedByUser: boolean) => void;\n  runChangeDetectionHandler: () => void;\n}\n\nexport interface IPopupWindowConfig {\n  componentConfig: any;\n  layoutSettings: any;\n  popin: PopinHandler;\n  fireStateChanged: PopupStateChangedHandler;\n  runChangeDetectionInRootWindow: () => void;\n  needRunChangeDetection: Observable<any>;\n  onLayoutCreated: (GoldenLayoutComponent) => void;\n}\n\nexport const PopupWindowConfigKey = 'popupWindowConfigKey';\n\nexport class PopupWindowManager {\n  id: string = JsUtils.generateGUID();\n\n  private _closedByUser: boolean = true;\n  private _runChangeDetection$ = new Subject();\n  private _popupLayout: GoldenLayoutComponent;\n\n  static openWindow(url: string): Window {\n    const windowOptions = {\n      width: 500,\n      height: 500,\n      menubar: 'no',\n      toolbar: 'no',\n      location: 'no',\n      personalbar: 'no',\n      resizable: 'yes',\n      scrollbars: 'no',\n      status: 'no'\n    };\n\n    const popupWindowNative = window.open(url,\n      `${JsUtils.generateGUID()}`, PopupWindowManager.serializeWindowOptions(windowOptions));\n\n    if (popupWindowNative == null) {\n      return null;\n    }\n\n    return popupWindowNative;\n  }\n\n  static serializeWindowOptions(windowOptions: any) {\n    const windowOptionsString = [];\n\n    for (const key in windowOptions) {\n      windowOptionsString.push(key + '=' + windowOptions[key]);\n    }\n\n    return windowOptionsString.join(',');\n  }\n\n  constructor(public window: Window,\n              private popupConfig: IPopupWindowManagerConfig) {\n\n    this.window[PopupWindowConfigKey] = {\n      componentConfig: popupConfig.componentConfig,\n      layoutSettings: popupConfig.layoutSettings,\n\n      popin: ((compConfig) => {\n        popupConfig.popinHandler(compConfig);\n      }) as PopinHandler,\n\n      fireStateChanged: (() => {\n        popupConfig.popupStateChangedHandler();\n      }) as PopupStateChangedHandler,\n\n      runChangeDetectionInRootWindow: () => {\n        popupConfig.runChangeDetectionHandler();\n      },\n\n      needRunChangeDetection: this._runChangeDetection$.asObservable(),\n      onLayoutCreated: (layout: GoldenLayoutComponent) => {\n        this._popupLayout = layout;\n      }\n    } as IPopupWindowConfig;\n\n    $(this.window).one('load', () => {\n      $(this.window).one('unload', () => {\n        popupConfig.popupClosedHandler(this._closedByUser);\n        this.window.close();\n      });\n    });\n  }\n\n  runChangeDetection() {\n    this._runChangeDetection$.next();\n  }\n\n  saveState() {\n    const componentConfig = this._popupLayout.saveState().content[0] as ComponentConfig;\n    delete componentConfig['width'];\n\n    return componentConfig;\n  }\n\n  close() {\n    this._closedByUser = false;\n    this.window.close();\n  }\n}\n","import {InjectionToken} from \"@angular/core\";\n\nexport const GoldenLayoutItemContainerToken = new InjectionToken('wrapper');\n","import {InjectionToken} from \"@angular/core\";\nimport {IGoldenLayoutComponentConfiguration} from \"../models/configuration\";\n\nexport const GoldenLayoutComponentConfiguration = new InjectionToken<IGoldenLayoutComponentConfiguration>('GoldenLayoutComponentConfiguration');\n","import {InjectionToken} from '@angular/core';\n\nexport const GoldenLayoutItemState = new InjectionToken('GoldenLayoutItemState');\n\n","/// <reference path=\"../../../../libs/golden-layout.d.ts\" />\n\nimport {\n    ApplicationRef,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    HostListener, Inject,\n    Injector,\n    NgZone,\n    ReflectiveInjector,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ComponentResolver, GoldenLayoutLabels, IGoldenLayoutComponentConfiguration} from '../../models/configuration';\nimport {IGoldenLayoutComponentState} from \"../../models/golden-layout-component-state\";\nimport Container = GoldenLayoutNamespace.Container;\nimport {BehaviorSubject, fromEvent, Observable, of, Subject} from \"rxjs\";\nimport {auditTime, filter, first, takeUntil} from \"rxjs/operators\";\nimport {GoldenLayoutContainer} from \"../../tokens/golden-layout-container.token\";\nimport {GoldenLayoutItemComponentResolver} from \"../../tokens/golden-layout-item-component-factory.token\";\n\nimport {LayoutManagerService} from \"../../services/layout-manager.service\";\nimport {IPopupWindowManagerConfig, PopupWindowManager} from \"../../popup-window-manager\";\nimport ComponentConfig = GoldenLayoutNamespace.ComponentConfig;\nimport {GoldenLayoutItemContainerToken} from \"../../tokens/golden-layout-item-container.token\";\nimport {GoldenLayoutComponentConfiguration} from \"../../tokens/golden-layout-configuration.token\";\nimport {GoldenLayoutItemState} from '../../tokens/golden-layout-item-state.token';\nimport {IGoldenLayoutItem} from '../../models/golden-layout-item';\n\nexport type ComponentInitCallback = (container: GoldenLayoutNamespace.Container, componentState: any) => void;\n\nexport interface GoldenLayoutState extends IGoldenLayoutComponentState, GoldenLayoutNamespace.Config {\n}\n\nconst COMPONENT_REF_KEY = '$componentRef';\nexport const DefaultLabels: GoldenLayoutLabels = {\n    additionalTabs: of('Additional tabs'),\n    addComponent: of('Add Component'),\n    maximise: of('Maximise'),\n    minimise: of('Minimise'),\n    popout: of('Open in new window'),\n    popin: of('Pop in'),\n    close: of('Close'),\n    loading: of('Loading'),\n    failedToLoadComponent: of('Failed to load component')\n};\nconst Class = {\n    tabsDropdown: 'lm_tabdropdown',\n    addComponent: 'lm_add-component',\n    close: 'lm_close',\n    closeTab: 'lm_close_tab',\n    maximise: 'lm_maximise',\n    popout: 'lm_popout',\n    popin: 'lm_popin',\n    tabDrag: 'lm_tab_drag',\n    ClosableTab: 'closable-tab'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n    selector: 'golden-layout',\n    templateUrl: 'golden-layout.component.html',\n    styleUrls: [\n        'golden-layout.component.scss'\n    ],\n    providers: []\n})\nexport class GoldenLayoutComponent {\n    static stateVersion = '1'; // also need change in saved workspaces\n    @ViewChild('glroot', {static: false}) private el: ElementRef;\n\n    popupsWindows: PopupWindowManager[] = [];\n    $onAddComponent = new Subject<any>();\n    $layoutEmpty = new BehaviorSubject<boolean>(false);\n    $stateChanged = new Subject();\n    goldenLayout: GoldenLayout;\n\n    private _destroy$ = new Subject();\n    private _labels: GoldenLayoutLabels = DefaultLabels;\n    private _resize$ = new Subject();\n    private _suppressChangeDetection = false;\n    private _isDestroyed = false;\n\n    get isLayoutEmpty(): boolean {\n        return this.$layoutEmpty.getValue();\n    }\n\n    static getSingleComponentLayoutConfig(componentConfig: ComponentConfig): IGoldenLayoutComponentState {\n        return {\n            version: GoldenLayoutComponent.stateVersion,\n            content: [\n                componentConfig\n            ]\n        };\n    }\n\n    constructor(private viewContainer: ViewContainerRef,\n                private _layoutManager: LayoutManagerService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngZone: NgZone,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _appRef: ApplicationRef,\n                private injector: Injector,\n                @Inject(GoldenLayoutComponentConfiguration) private _configuration: IGoldenLayoutComponentConfiguration) {\n        this._layoutManager.setLayout(this);\n        this._setLabels(this._configuration.labels ? Object.assign({}, DefaultLabels, this._configuration.labels) : DefaultLabels);\n    }\n\n    ngOnInit() {\n        this._resize$\n            .pipe(\n                auditTime(10),\n                takeUntil(this._destroy$)\n            )\n            .subscribe(() => {\n                if (this.goldenLayout) {\n                    this.goldenLayout.updateSize();\n                }\n            });\n    }\n\n    ngDoCheck() {\n        if (!this._suppressChangeDetection) {\n            this.popupsWindows.forEach(w => w.runChangeDetection());\n        }\n    }\n\n    private _registerComponents() {\n        for (const component of this._configuration.components) {\n            this.goldenLayout.registerComponent(\n                component.componentName,\n                this.createComponentInitCallback(component)\n            );\n        }\n    }\n\n    private _createLayout(state: GoldenLayoutState): Promise<any> {\n        const createLayout = () => {\n            return new Promise((resolve) => {\n                const notOpenedPopupsComponents = [];\n\n                if (state.openPopups) {\n                    for (const itemConfig of state.openPopups) {\n                        const opened = this._openPopup(itemConfig);\n\n                        if (!opened) {\n                            notOpenedPopupsComponents.push(\n                                itemConfig\n                            );\n                        }\n                    }\n                }\n\n                if (notOpenedPopupsComponents.length) {\n                    const isLayoutEmpty = state.content.length === 0;\n\n                    if (isLayoutEmpty) {\n                        state.content = [\n                            {\n                                type: 'row',\n                                width: 100,\n                                height: 100,\n                                content: [\n                                    ...notOpenedPopupsComponents\n                                ]\n                            }\n                        ];\n                    } else {\n                        state.content = [\n                            {\n                                type: \"row\",\n                                width: 100,\n                                height: 100,\n                                content: [\n                                    Object.assign({}, state.content[0], {width: 50, height: 100}),\n                                    ...notOpenedPopupsComponents\n                                ]\n                            }\n                        ];\n                    }\n                }\n                this.goldenLayout = new GoldenLayout(state as GoldenLayoutNamespace.Config, $(this.el.nativeElement));\n                this.goldenLayout.on('stateChanged', (v) => {\n                    if (this.goldenLayout.isInitialised) {\n                        this.$stateChanged.next();\n                    }\n                });\n\n                this._registerComponents();\n\n                (window as any).gl = this.goldenLayout;\n                (window as any).glc = this;\n\n                this.goldenLayout.on('itemCreated', (item) => {\n                    this._handleItemCreated(item);\n                });\n\n                // Destory child angular components on golden-helpers container destruction.\n                this.goldenLayout.on('itemDestroyed', (item: any) => {\n                    const container = item.container;\n                    const component = container && container[COMPONENT_REF_KEY];\n\n                    if (component) {\n                        component.destroy();\n                        (container as any)[COMPONENT_REF_KEY] = null;\n                    }\n                });\n\n                this.goldenLayout.on('stackCreated', (stack) => {\n                    this._handleStackCreated(stack);\n                });\n\n                this.goldenLayout.eventHub.on('selectionChanged', (item: any) => {\n                });\n\n                this.goldenLayout.eventHub.on('columnCreated', (item: any) => {\n                });\n\n                this.goldenLayout.on('itemCreated', () => {\n                    this.$layoutEmpty.next(false);\n                });\n\n                this.goldenLayout.on('itemDestroyed', (() => {\n                    let _ignoredItem = null; // item that will be replaced\n\n                    return (item: GoldenLayoutNamespace.ContentItem) => {\n                        if (item.parent && (item.parent.isColumn || item.parent.isRow) && item.parent.contentItems.length === 2) {\n                            _ignoredItem = item.parent;\n                        }\n\n                        if (item !== _ignoredItem) {\n                            const isLayoutEmpty = this.goldenLayout.root.contentItems.filter((i) => i !== item).length === 0;\n                            this.$layoutEmpty.next(isLayoutEmpty);\n                            this._changeDetectorRef.detectChanges();\n                        }\n                    };\n                })());\n\n                this.goldenLayout.on('beforeItemDestroyed', (item: GoldenLayoutNamespace.ContentItem) => {\n                    if (item.isMaximised) {\n                        item.toggleMaximise(); // fix issue with deleting maximised component\n                    }\n                });\n\n                this.goldenLayout.on('initialised', () => {\n                    this.$layoutEmpty.next(this.goldenLayout.root.contentItems.length === 0);\n                        if (!this._isDestroyed) {\n                            this._changeDetectorRef.detectChanges();\n                        }\n                    // this.goldenLayout.updateSize();\n\n                    resolve();\n                });\n\n                // Initialize the helpers.\n                this.goldenLayout.init();\n            });\n        };\n\n        return new Promise((resolve, rej) => {\n            setTimeout(() => { // use timeout for correct sizing\n                resolve(createLayout());\n            }, 0);\n        });\n    }\n\n    @HostListener('window:resize', ['$event'])\n    public onResize(event: any): void {\n        this._resize$.next();\n    }\n\n    private _handleItemCreated(item: GoldenLayoutNamespace.ContentItem) {\n        try {\n            if (item.isStack && this._configuration.settings.showAddBtn !== false) {\n                const addComponentBtn = $(`<span class='${Class.addComponent}'></span>`);\n\n                this._getLabel('addComponent')\n                    .subscribe((label) => {\n                        addComponentBtn.attr('title', label);\n                    });\n\n                if (this._configuration.settings.getAddComponentBtnIcon) {\n                    addComponentBtn.append(this._configuration.settings.getAddComponentBtnIcon());\n                }\n\n                $((item as any).header.tabsContainer).append(addComponentBtn);\n\n                this.ngZone.run(() => {\n                    addComponentBtn.click(() => {\n                        this.$onAddComponent.next(item);\n                    });\n                });\n            }\n\n            item.on('resize', () => {\n                $(window).trigger('resize');\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    private _handleStackCreated(stack: any) {\n        if (this._configuration.settings.showCloseIcon !== false) {\n            this._addCloseBtn(stack);\n        } else {\n            stack.header.controlsContainer\n                .find(`.${Class.close}`).hide();\n        }\n\n        if (this._configuration.settings.showMaximiseIcon !== false) {\n            this._addMaximizeBtn(stack);\n        } else {\n            stack.header.controlsContainer\n                .find(`.${Class.maximise}`).hide();\n        }\n\n        if (this._configuration.settings.showPopoutIcon !== false) {\n            this._addPopoutBtn(stack);\n        } else {\n            stack.header.controlsContainer\n                .find(`.${Class.popout}`).hide();\n        }\n\n        this._getLabel('additionalTabs')\n            .subscribe((label) => {\n                stack.header.controlsContainer\n                    .find(`.${Class.tabsDropdown}`).attr('title', label);\n            });\n\n        if (this._configuration.settings.showPopinIcon !== false) {\n            this._addPopinBtn(stack);\n        }\n    }\n\n    public createComponentInitCallback(componentResolver: ComponentResolver): ComponentInitCallback {\n        const that = this;\n\n        return function (container: Container, state: any) {\n            that.ngZone.run(() => {\n                // Create an instance of the angular component.\n\n                const factory = that.componentFactoryResolver.resolveComponentFactory(that.injector.get(GoldenLayoutItemContainerToken) as Type<IGoldenLayoutItem>);\n                const injector = that._createComponentInjector(container, state.componentState, componentResolver);\n                const componentRef = that.viewContainer.createComponent(factory, undefined, injector);\n\n                // Bind the new component to container's client DOM element.\n                container.getElement().append($(componentRef.location.nativeElement));\n\n                that._bindEventHooks(container, componentRef);\n                // this._initComponent(container, componentRef.instance);\n\n                (window as any).container = container;\n\n                // Store a ref to the compoenentRef in the container to support destruction later on.\n                (container as any)[COMPONENT_REF_KEY] = componentRef;\n\n\n                // const factory = this.componentFactoryResolver.resolveComponentFactory(layoutItemClass);\n                // const injector = this._createComponentInjector(container, state.componentState);\n                // const componentRef = this.viewContainer.createComponent(factory, undefined, injector);\n                //\n                // // Bind the new component to container's client DOM element.\n                // container.getElement().append($(componentRef.location.nativeElement));\n                //\n                // this._bindEventHooks(container, componentRef);\n                // this._initComponent(container, componentRef.instance);\n                //\n                // (window as any).container = container;\n                //\n                // // Store a ref to the compoenentRef in the container to support destruction later on.\n                // (container as any)[COMPONENT_REF_KEY] = componentRef;\n            });\n        };\n    }\n\n    public fireStateChanged() {\n        this.$stateChanged.next();\n    }\n\n    /**\n     * Creates an injector capable of injecting the Layout object,\n     * component container, and initial component state.\n     */\n    private _createComponentInjector(container: any, state: any, componentResolver: ComponentResolver): Injector {\n        return ReflectiveInjector.resolveAndCreate([\n            {\n                provide: GoldenLayoutContainer,\n                useValue: container\n            },\n            {\n                provide: GoldenLayoutItemState,\n                useValue: state\n            },\n            {\n                provide: GoldenLayout,\n                useValue: this.goldenLayout\n            },\n            {\n                provide: GoldenLayoutComponent,\n                useValue: this\n            },\n            {\n                provide: GoldenLayoutItemComponentResolver,\n                useValue: componentResolver\n            }\n        ], this.injector);\n    }\n\n    /**\n     * Registers an event handler for each implemented hook.\n     * @param container Golden Layout component container.\n     * @param component Angular component instance.\n     */\n    private _bindEventHooks(container: any, componentRef: ComponentRef<IGoldenLayoutItem>): void {\n        const component = componentRef.instance as IGoldenLayoutItem;\n\n        container.on('resize', () => {\n            component.onResize();\n        });\n\n        container.on('show', () => {\n            component.onShow();\n        });\n\n        container.on('hide', () => {\n            component.onHide();\n        });\n\n        container.on('tab', (tab: GoldenLayoutNamespace.Tab) => {\n            this._handleTabCreated(tab);\n\n            if ((container as any)._config.isClosable) {\n                tab.element.addClass(Class.ClosableTab);\n            }\n\n            component.onTabCreated(tab.element as JQuery);\n        });\n    }\n\n    private _addPopoutBtn(stack: any) {\n        const popoutBtn = stack.header.controlsContainer\n            .find(`.${Class.popout}`);\n\n        popoutBtn.off();\n\n        this._getLabel('popout').pipe()\n            .subscribe((label) => {\n                popoutBtn.attr('title', label);\n            });\n\n        if (this._configuration.settings.getPopoutIcon) {\n            popoutBtn.append(this._configuration.settings.getPopoutIcon());\n        }\n\n        popoutBtn.click(() => {\n            this._handlePopupClick(stack);\n        });\n    }\n\n    private _addPopinBtn(stack: any) {\n        const popinBtn = $(`\n            <li class=\"${Class.popin}\"></li>\n        `);\n\n        this._getLabel('popin')\n            .subscribe((label) => {\n                popinBtn.attr('title', label);\n            });\n\n        popinBtn.append(this._configuration.settings.getPopinIcon());\n\n        fromEvent(popinBtn, 'click').pipe(\n            first()\n        ).subscribe(() => {\n            for (let component of stack.contentItems) {\n                this._saveItemState(component.container);\n            }\n\n            this._configuration.settings.popinHandler(stack.config);\n        });\n\n        stack.header.controlsContainer.find('.lm_tabdropdown').after(popinBtn);\n    }\n\n    private _getMaximiseIcon(): JQuery {\n        return this._configuration.settings.getMaximiseIcon\n            ? this._configuration.settings.getMaximiseIcon()\n            : null;\n    }\n\n    private _getMinimiseIcon(): JQuery {\n        return this._configuration.settings.getMinimiseIcon\n            ? this._configuration.settings.getMinimiseIcon()\n            : null;\n    }\n\n    private _addMaximizeBtn(stack: any) {\n        const updateBtn = (isMaximised: boolean) => {\n            const icon = isMaximised ? this._getMinimiseIcon() : this._getMaximiseIcon();\n            const maximiseBtn = stack.header.controlsContainer.find(`.${Class.maximise}`);\n\n            maximiseBtn.empty();\n\n            this._getLabel(isMaximised ? 'minimise' : 'maximise')\n                .subscribe((label: string) => {\n                    maximiseBtn.attr('title', label);\n                });\n\n            if (icon) {\n                maximiseBtn.append(icon);\n            }\n        };\n\n        stack.on('maximised', () => updateBtn(true));\n        stack.on('minimised', () => updateBtn(false));\n\n        updateBtn(false);\n    }\n\n    private _addCloseBtn(stack: any) {\n        const btn = stack.header.controlsContainer.find(`.${Class.close}`);\n\n        if (this._configuration.settings.getCloseIcon) {\n            btn.append(this._configuration.settings.getCloseIcon());\n        }\n\n        this._getLabel('close')\n            .subscribe((label) => {\n                btn.attr('title', label);\n            });\n    }\n\n    private _addCloseTabBtn(tab: GoldenLayoutNamespace.Tab) {\n        if (this._configuration.settings.getCloseTabIcon) {\n            tab.closeElement.append(this._configuration.settings.getCloseTabIcon());\n        }\n    }\n\n    private _handleTabCreated(tab: GoldenLayoutNamespace.Tab) {\n        if (this._configuration.settings.showCloseTabIcon !== false) {\n            this._addCloseTabBtn(tab);\n        } else {\n            tab.closeElement.hide();\n        }\n\n        this._addMobileTabDraggingSupport(tab);\n    }\n\n    private _handlePopupClick(stack: any) {\n        if (this._configuration.settings.canOpenPopupWindow != null && !this._configuration.settings.canOpenPopupWindow()) {\n            return;\n        }\n\n        const activeContentItem = stack.getActiveContentItem();\n        const parentId = activeContentItem.parent && activeContentItem.parent.config.id;\n\n        for (let item of stack.contentItems) {\n            this._saveItemState(item.container);\n        }\n\n        // activeContentItem.container.extendState({\n        //     componentState: activeContentItem.container[COMPONENT_REF_KEY].instance.saveState(),\n        //     parentId: parentId\n        // });\n\n        const componentConfig = stack.config;\n\n        this._openPopup(componentConfig);\n        stack.parent.removeChild(stack);\n    }\n\n    private _addMobileTabDraggingSupport(tab: GoldenLayoutNamespace.Tab) {\n        /*\n        * https://developer.mozilla.org/en-US/docs/Web/API/Touch/target\n        *\n        * If touchstart event target removed from DOM, then touchmove event won't be fired\n        *\n        * Solution: add overlay element to each tab, that will be replaced from tab container to body when touchstart\n        * event will be fired\n        *\n        *\n        * */\n\n        const tabDrag = $(`<span class=\"${Class.tabDrag}\"></span>`);\n        tabDrag.css({\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            'z-index': 1\n        });\n\n        $(tab.element).append(tabDrag);\n\n        if (this._configuration.settings.reorderEnabled !== false) {\n            this._overrideTabOnDragStart(tab);\n        }\n    }\n\n\n    private _overrideTabOnDragStart(tab: any) {\n        const origin = tab._onDragStart;\n        const dragListener = tab._dragListener;\n        const dragElement = $(tab.element).find(`.${Class.tabDrag}`);\n\n        dragListener.off('dragStart', origin, tab);\n        const onDragStart = function (x, y) {\n            dragElement.appendTo('body');\n            origin.call(tab, x, y);\n        };\n\n        tab._onDragStart = onDragStart;\n        dragListener.on('dragStart', (tab as any)._onDragStart, tab);\n        dragListener.on('dragStop', () => {\n            dragElement.remove();\n        }, null);\n    }\n\n    private _openPopup(componentConfig: GoldenLayoutNamespace.ItemConfig): boolean {\n        let popupWindow: Window;\n        let popupWindowManager: PopupWindowManager;\n\n        const popupWindowConfig: IPopupWindowManagerConfig = {\n            componentConfig: componentConfig,\n            layoutSettings: this._configuration.settings,\n            popinHandler: (_componentConfig) => {\n                popupWindow.close();\n                this.addItemAsColumn(_componentConfig);\n            },\n            popupStateChangedHandler: () => {\n                this.$stateChanged.next();\n            },\n            popupClosedHandler: (closedByUser: boolean) => {\n                if (closedByUser) {\n                    this.popupsWindows = this.popupsWindows.filter(p => p !== popupWindowManager);\n                    this.$stateChanged.next();\n                }\n            },\n            runChangeDetectionHandler: () => {\n                this._suppressChangeDetection = true;\n                this._appRef.tick();\n                this._suppressChangeDetection = false;\n                this.popupsWindows.filter(w => w !== popupWindowManager).forEach(w => w.runChangeDetection());\n            }\n        };\n\n        popupWindow = PopupWindowManager.openWindow(this._configuration.settings.popupWindowUrl);\n\n        if (!popupWindow) {\n            if (this._configuration.settings.openPopupFailureHandler) {\n                this._configuration.settings.openPopupFailureHandler();\n            }\n\n            return false;\n        }\n\n        if (this._configuration.settings.openPopupHook) {\n            this._configuration.settings.openPopupHook(popupWindow);\n        }\n\n        popupWindowManager = new PopupWindowManager(popupWindow, popupWindowConfig);\n\n        this.popupsWindows.push(popupWindowManager);\n\n        return true;\n    }\n\n    private _saveItemState(container: Container) {\n        container.setState(Object.assign({}, container.getState(), {\n            componentState: (container[COMPONENT_REF_KEY].instance as IGoldenLayoutItem).saveState()\n        }));\n    }\n\n    saveState(): GoldenLayoutState {\n        for (let component of this.getAllComponents()) {\n            this._saveItemState((component as any).container);\n        }\n\n        const state: GoldenLayoutState = {\n            ...this.goldenLayout.toConfig(),\n            openPopups: this.popupsWindows.map(p => p.saveState()),\n            version: GoldenLayoutComponent.stateVersion\n        };\n\n        return state;\n    }\n\n    loadState(state: IGoldenLayoutComponentState, fireStateChanged: boolean = false): Promise<any> {\n        if (this.goldenLayout && this.goldenLayout.isInitialised) {\n            this.goldenLayout.destroy();\n\n            if (this.popupsWindows.length) {\n                this.closePopups();\n                this.popupsWindows = [];\n            }\n        }\n\n        return this._createLayout(this._normalizeLayoutState(state))\n            .then(() => {\n                if (fireStateChanged) {\n                    this.$stateChanged.next();\n                }\n\n                return Promise.resolve();\n            });\n    }\n\n    saveItemState(itemId: string): any {\n        const items = this.goldenLayout.root.getItemsById(itemId);\n        const item = items && items.length ? items[0] : null;\n\n        if (!item) {\n            return null;\n        }\n\n        return item.config;\n    }\n\n    closePopups() {\n        this.popupsWindows.forEach((p) => {\n            p.close();\n        });\n    }\n\n    getAllComponents(): GoldenLayoutNamespace.ContentItem[] {\n        if (this.goldenLayout && this.goldenLayout.isInitialised) {\n            return this.goldenLayout.root.getItemsByType('component') as GoldenLayoutNamespace.ContentItem[];\n        }\n\n        return [];\n    }\n\n    private _normalizeLayoutState(state: IGoldenLayoutComponentState): IGoldenLayoutComponentState {\n        let normalizedState = Object.assign({}, state, {\n            settings: Object.assign({}, state.settings, {\n                tabControlOffset: this._configuration.settings.tabControlOffset != null ? this._configuration.settings.tabControlOffset : 100,\n                selectionEnabled: this._configuration.settings.selectionEnabled != null ? this._configuration.settings.selectionEnabled : false,\n                reorderEnabled: this._configuration.settings.reorderEnabled != null ? this._configuration.settings.reorderEnabled : true,\n                responsiveMode: this._configuration.settings.responsiveMode != null ? this._configuration.settings.responsiveMode : 'none',\n                showCloseIcon: this._configuration.settings.showCloseIcon != null ? this._configuration.settings.showCloseIcon : true\n            } as Partial<GoldenLayoutNamespace.Settings>) as GoldenLayoutNamespace.Settings\n        }) as IGoldenLayoutComponentState;\n\n        if (this._configuration.settings.dimensions) {\n            normalizedState.dimensions = this._configuration.settings.dimensions;\n        }\n\n        normalizedState = this._migrateState(normalizedState);\n\n        return normalizedState;\n    }\n\n    private _migrateState(state: GoldenLayoutState): IGoldenLayoutComponentState {\n      const stateVersion = state.version;\n\n      if (stateVersion === GoldenLayoutComponent.stateVersion) {\n        return state;\n      }\n\n      if (state.version == null || state.version !== GoldenLayoutComponent.stateVersion) {\n        console.warn(`Incompatible layout state verGoldenLayoutStatesions. Current layout state version: ${GoldenLayoutComponent.stateVersion}, your state version: ${state.version || 'none'}`);\n        state.content = []; // clear all components\n      }\n\n      return state;\n    }\n\n\n    async addItemAsColumn(componentConfig: GoldenLayoutNamespace.ComponentConfig) {\n        if (this.goldenLayout == null) {\n            try {\n                if (this.goldenLayout.isInitialised) {\n                    this.goldenLayout.destroy();\n                }\n\n                await this._createLayout(null);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n\n        const layoutRoot = (this.goldenLayout.root as GoldenLayoutNamespace.ContentItem);\n\n        if (this.isLayoutEmpty) {\n            layoutRoot.addChild(componentConfig);\n            return;\n        }\n\n        if (layoutRoot.contentItems.length === 1 && layoutRoot.contentItems[0].isRow) {\n            layoutRoot.contentItems[0].addChild(componentConfig);\n            return;\n        }\n\n        const row = this.goldenLayout.createContentItem({\n            type: 'row',\n            id: (new Date()).getTime(), // (new Date()).getTime()\n            width: 100,\n            height: 100\n        }) as any;\n\n        const temp = this.goldenLayout.root.contentItems[0];\n\n        this.goldenLayout.root.replaceChild(\n            temp,\n            row\n        );\n\n        row.addChild(temp);\n        row.addChild(componentConfig);\n    }\n\n\n    async addComponentAsColumn(componentName: string, componentState) {\n        const componentConfig = this._createComponentContentItemConfig(componentName, componentState);\n        this.addItemAsColumn(componentConfig);\n    }\n\n\n    async addComponent(componentName: string, componentState, parent: GoldenLayoutNamespace.ContentItem) {\n        const componentConfig = this._createComponentContentItemConfig(componentName, componentState);\n\n        if (this.isLayoutEmpty) {\n            this.goldenLayout.root.addChild(componentConfig);\n            return;\n        }\n\n        if (!parent) {\n            this.addComponentAsColumn(componentName, componentState);\n        }\n\n        parent.addChild(componentConfig);\n    }\n\n    addItem(componentConfig: any) {\n        const isLayoutEmpty = this.goldenLayout.root.contentItems.length === 0;\n\n        const stack = {\n            type: 'stack',\n            id: (new Date()).getTime(),\n            content: [\n                componentConfig\n            ]\n        };\n\n        if (isLayoutEmpty) {\n            this.goldenLayout.root.addChild(stack);\n        } else {\n            const stackContentItem: any = this.goldenLayout.createContentItem({\n                type: 'stack',\n                id: (new Date()).getTime(),\n                content: []\n            });\n\n            stackContentItem.addChild(\n                this.goldenLayout.createContentItem(componentConfig)\n            );\n\n            const column = this.goldenLayout.createContentItem({\n                type: 'column',\n                id: (new Date()).getTime(),\n                width: 100,\n                height: 100\n            }) as any;\n\n            const temp = this.goldenLayout.root.contentItems[0];\n\n            this.goldenLayout.root.replaceChild(\n                temp,\n                column\n            );\n\n            column.addChild(temp);\n            column.addChild(stackContentItem);\n        }\n    }\n\n    getItemsById(id: string): any[] {\n        return (this.goldenLayout.root as any).getItemsById(id) as any[];\n    }\n\n    private _setLabels(labels: GoldenLayoutLabels) {\n        this._labels = Object.assign({}, DefaultLabels, labels);\n        const isLayoutInitialized = () => {\n            return this.goldenLayout && this.goldenLayout.isInitialised;\n        };\n\n        const getLabel = (label: keyof GoldenLayoutLabels): Observable<string> => {\n            return this._getLabel(label, false)\n                .pipe(\n                    filter(() => isLayoutInitialized()),\n                    takeUntil(this._destroy$)\n                );\n        };\n\n        getLabel('addComponent')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.addComponent}`).attr('title', label);\n            });\n\n        getLabel('close')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.close}`).attr('title', label);\n            });\n\n        getLabel('maximise')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.maximise}`).attr('title', label);\n            });\n\n        getLabel('minimise')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.lm_maximised .${Class.maximise}`).attr('title', label);\n            });\n\n        getLabel('popout')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.popout}`).attr('title', label);\n            });\n\n        getLabel('additionalTabs')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.tabsDropdown}`).attr('title', label);\n            });\n\n        getLabel('popin')\n            .subscribe((label: string) => {\n                $(this.el.nativeElement).find(`.${Class.popin}`).attr('title', label);\n            });\n    }\n\n    private _getLabel(label: keyof GoldenLayoutLabels, firstValue: boolean = true): Observable<string> {\n        const label$ = this._labels[label];\n\n        if (firstValue) {\n            return label$\n                .pipe(first());\n        }\n\n        return label$;\n    }\n\n    updateSize() {\n        if (this.goldenLayout) {\n            this.goldenLayout.updateSize();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n        this._isDestroyed = true;\n    }\n\n    clear() {\n    }\n\n    @HostListener('window:unload', ['$event'])\n    unloadNotification($event: any) {\n        this.closePopups();\n    }\n\n    destroy() {\n        this.closePopups();\n\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    private _createComponentContentItemConfig(componentName: string, componentState): GoldenLayoutNamespace.ComponentConfig {\n        return {\n            type: 'component',\n            id: (new Date()).getTime().toString(),\n            componentName: componentName,\n            componentState: {\n                componentState: componentState\n            }\n        };\n    }\n}\n","import {ApplicationRef, Component, Inject, Injectable, Injector, OnInit, SkipSelf, ViewChild} from '@angular/core';\nimport {IGoldenLayoutComponentConfiguration, IGoldenLayoutComponentSettings} from '../../models/configuration';\nimport {GoldenLayoutComponent} from '../../components/golden-layout/golden-layout.component';\nimport {takeUntil} from 'rxjs/operators';\nimport {\n  IPopupWindowConfig,\n  PopupWindowConfigKey\n} from '../../popup-window-manager';\nimport ComponentConfig = GoldenLayoutNamespace.ComponentConfig;\nimport {GoldenLayoutComponentConfiguration} from '../../tokens/golden-layout-configuration.token';\nimport {Subject} from 'rxjs';\n\n@Injectable()\nexport class __Holder {\n  constructor(@SkipSelf() @Inject(GoldenLayoutComponentConfiguration) public configuration) {\n  }\n}\n\n\nexport function configurationFactory(injector: Injector, holder: __Holder) {\n  const configuration = holder.configuration;\n  const popupConfiguration = (window as any)[PopupWindowConfigKey] as IPopupWindowConfig;\n\n  return {\n    settings: {\n      ...configuration.settings,\n      popinHandler: (componentConfig: ComponentConfig) => {\n        delete componentConfig['width'];\n        popupConfiguration.popin(componentConfig);\n      }\n    },\n    labels: configuration.labels,\n    components: configuration.components\n  } as IGoldenLayoutComponentConfiguration;\n}\n\n@Component({\n  selector: 'golden-layout-popup',\n  templateUrl: './golden-layout-popup.component.html',\n  styleUrls: ['./golden-layout-popup.component.scss'],\n  providers: [\n    __Holder,\n    {\n      provide: GoldenLayoutComponentConfiguration,\n      useFactory: configurationFactory,\n      deps: [\n        Injector,\n        __Holder\n      ]\n    }\n  ]\n})\nexport class GoldenLayoutPopupComponent implements OnInit {\n  @ViewChild(GoldenLayoutComponent, {static: false}) layout: GoldenLayoutComponent;\n\n  private _popupConfiguration: IPopupWindowConfig;\n  private _componentConfig: any;\n  private _suppressChangeDetection: boolean = false;\n  private _destroy = new Subject();\n\n  constructor(private _appRef: ApplicationRef) {\n    const popupConfiguration = (window as any)[PopupWindowConfigKey] as IPopupWindowConfig;\n\n    popupConfiguration.needRunChangeDetection\n      .pipe(\n        takeUntil(this._destroy)\n      )\n      .subscribe(() => {\n        this._suppressChangeDetection = true;\n        this._appRef.tick();\n        this._suppressChangeDetection = false;\n      });\n\n    this._popupConfiguration = popupConfiguration;\n    this._componentConfig = popupConfiguration.componentConfig;\n  }\n\n  ngOnInit() {\n  }\n\n  ngDoCheck() {\n    if (!this._suppressChangeDetection) {\n      this._popupConfiguration.runChangeDetectionInRootWindow();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.layout.loadState(GoldenLayoutComponent.getSingleComponentLayoutConfig(this._componentConfig));\n    this.layout.$stateChanged\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this.layout.getAllComponents().length === 0) {\n          window.close();\n          return;\n        }\n\n        this._popupConfiguration.fireStateChanged();\n      });\n\n    this._popupConfiguration.onLayoutCreated(this.layout);\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n}\n","import Container = GoldenLayoutNamespace.Container;\nimport {Observable, Subject, Subscription} from 'rxjs';\nimport {Injector} from \"@angular/core\";\nimport {GoldenLayoutContainer} from \"./tokens/golden-layout-container.token\";\nimport {GoldenLayoutComponent} from \"./components/golden-layout/golden-layout.component\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {IGoldenLayoutItem} from './models/golden-layout-item';\n\nexport class GoldenLayoutItem implements IGoldenLayoutItem {\n    protected _container: Container;\n    protected _goldenLayoutComponent: GoldenLayoutComponent;\n    protected _tabElement: JQuery;\n    private _titleSubscription: Subscription;\n    private _destroy = new Subject();\n\n    constructor(injector: Injector) {\n        this._container = injector.get(GoldenLayoutContainer) as Container;\n        this._goldenLayoutComponent = injector.get(GoldenLayoutComponent);\n    }\n\n    saveState(): any {\n        return null;\n    }\n\n    onResize() {\n    }\n\n    onShow() {\n    }\n\n    onHide() {\n    }\n\n    onTabCreated(tabElement: JQuery) {\n        this._tabElement = tabElement;\n    }\n\n    onContainerMaximized(isOwnContainer: boolean) {\n    }\n\n    onContainerMinimized(isOwnContainer: boolean) {\n    }\n\n    setTitle(title$: Observable<string>) {\n        if (this._titleSubscription) {\n            this._titleSubscription.unsubscribe();\n        }\n\n        this._titleSubscription = title$\n            .pipe(takeUntil(this._destroy))\n            .subscribe((title: string) => {\n                this._container.setTitle(title);\n            });\n    }\n\n    fireStateChanged() {\n        this._goldenLayoutComponent.fireStateChanged();\n    }\n\n    ngOnDestroy() {\n      this._destroy.next();\n      this._destroy.complete();\n    }\n}\n","import {\n  Component, ComponentFactory, ComponentFactoryResolver,\n  Inject,\n  Injector,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n// import Container = GoldenLayoutNamespace.Container;\nimport {GoldenLayoutContainer} from \"../../tokens/golden-layout-container.token\";\nimport {GoldenLayoutItemComponentResolver} from \"../../tokens/golden-layout-item-component-factory.token\";\nimport {Observable, of} from \"rxjs\";\nimport {GoldenLayoutItem} from \"../../golden-layout-item\";\nimport {\n  ComponentResolver,\n  IComponentFactoryResolver,\n  IComponentTypeResolver,\n  IGoldenLayoutComponentConfiguration\n} from '../../models/configuration';\nimport {GoldenLayoutComponentConfiguration} from '../../tokens/golden-layout-configuration.token';\nimport {DefaultLabels} from '../../components/golden-layout/golden-layout.component';\nimport {IGoldenLayoutItem} from '../../models/golden-layout-item';\n\nenum LoadComponentState {\n  Loading,\n  Success,\n  Failed\n}\n\n@Component({\n    selector: 'golden-layout-item-container',\n    templateUrl: 'golden-layout-item-container.component.html',\n    styleUrls: ['golden-layout-item-container.component.scss']\n})\nexport class GoldenLayoutItemContainerComponent extends GoldenLayoutItem {\n    @ViewChild(\"componentContainer\", {read: ViewContainerRef, static: true}) componentContainer;\n    private _layoutItem: IGoldenLayoutItem;\n    protected _tabElement: JQuery;\n    loadComponentState: LoadComponentState;\n    LoadComponentState = LoadComponentState;\n\n    get loadingLabel(): Observable<string> {\n      return (this._configuration.labels && this._configuration.labels.loading)\n        ? this._configuration.labels.loading\n        : DefaultLabels.loading;\n    }\n\n    get failedToLoadLabel(): Observable<string> {\n      return (this._configuration.labels && this._configuration.labels.failedToLoadComponent)\n        ? this._configuration.labels.failedToLoadComponent\n        : DefaultLabels.failedToLoadComponent;\n    }\n\n    constructor(@Inject(GoldenLayoutContainer) protected _container: any,\n                @Inject(GoldenLayoutItemComponentResolver) private _componentResolver: ComponentResolver,\n                @Inject(GoldenLayoutComponentConfiguration) private _configuration: IGoldenLayoutComponentConfiguration,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _injector: Injector) {\n        super(_injector);\n    }\n\n    ngOnInit() {\n        this.setTitle(of('')); // fix\n        this.setTitle(this.loadingLabel);\n\n        if ((this._componentResolver as IComponentFactoryResolver).factory != null) {\n          this.loadComponentState = LoadComponentState.Loading;\n\n          (this._componentResolver as IComponentFactoryResolver).factory()\n            .subscribe({\n              next: (factory: ComponentFactory<any>) => {\n                this.setTitle(of(this._componentResolver.componentName));\n                const ref = this.componentContainer.createComponent(factory, undefined, this._injector);\n                ref.changeDetectorRef.detectChanges();\n\n                this._layoutItem = ref.instance as IGoldenLayoutItem;\n\n                if (this._tabElement) {\n                  this._layoutItem.onTabCreated(this._tabElement);\n                }\n\n                this.loadComponentState = LoadComponentState.Success;\n              },\n              error: (e) => {\n                console.error(e);\n                this.loadComponentState = LoadComponentState.Failed;\n                this.setTitle(this.failedToLoadLabel);\n              }\n            });\n        } else {\n          this.setTitle(of(this._componentResolver.componentName));\n\n          const componentFactory = this._componentFactoryResolver.resolveComponentFactory((this._componentResolver as IComponentTypeResolver).component);\n          const ref = this.componentContainer.createComponent(componentFactory, undefined, this._injector);\n          ref.changeDetectorRef.detectChanges();\n\n          this._layoutItem = ref.instance as IGoldenLayoutItem;\n\n          if (this._tabElement) {\n            this._layoutItem.onTabCreated(this._tabElement);\n          }\n\n          this.loadComponentState = LoadComponentState.Success;\n        }\n    }\n\n    saveState() {\n        if (this._layoutItem) {\n            return this._layoutItem.saveState();\n        }\n\n        return {};\n    }\n\n    onResize() {\n        if (this._layoutItem) {\n            this._layoutItem.onResize();\n        }\n    }\n\n    onShow() {\n        if (this._layoutItem) {\n            this._layoutItem.onShow();\n        }\n    }\n\n    onHide() {\n        if (this._layoutItem) {\n            this._layoutItem.onHide();\n        }\n    }\n\n    onTabCreated(tabElement: JQuery) {\n        if (this._layoutItem) {\n            this._layoutItem.onTabCreated(tabElement);\n        }\n\n        this._tabElement = tabElement;\n\n    }\n\n    onContainerMaximized(isOwnContainer: boolean) {\n        if (this._layoutItem) {\n            this._layoutItem.onContainerMaximized(isOwnContainer);\n        }\n    }\n\n    onContainerMinimized(isOwnContainer: boolean) {\n        if (this._layoutItem) {\n            this._layoutItem.onContainerMinimized(isOwnContainer);\n        }\n    }\n\n    ngOnDestroy() {\n    }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GoldenLayoutComponent} from './components/golden-layout/golden-layout.component';\nimport {LayoutManagerService} from \"./services/layout-manager.service\";\nimport {GoldenLayoutPopupComponent} from \"./components/golden-layout-popup/golden-layout-popup.component\";\nimport {GoldenLayoutItemContainerToken} from \"./tokens/golden-layout-item-container.token\";\nimport {GoldenLayoutItemContainerComponent} from \"./components/golden-layout-item-container/golden-layout-item-container.component\";\n\n@NgModule({\n    declarations: [GoldenLayoutComponent, GoldenLayoutItemContainerComponent, GoldenLayoutPopupComponent],\n    exports: [GoldenLayoutComponent, GoldenLayoutItemContainerComponent, GoldenLayoutPopupComponent],\n    imports: [CommonModule],\n    entryComponents: [\n        GoldenLayoutItemContainerComponent\n    ],\n    providers: [\n        {\n            provide: GoldenLayoutItemContainerToken,\n            useValue: GoldenLayoutItemContainerComponent\n        }\n    ]\n})\nexport class GoldenLayoutModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: GoldenLayoutModule,\n            providers: [\n                LayoutManagerService\n            ]\n        };\n    }\n}\n"]}